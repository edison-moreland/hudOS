#!/bin/bash
set -euo pipefail
source "${HUD_DATA_DIR}/logging.sh"

APP_NAME="${1:-}"
ACTION="${2:-}"
KEY="${3:-}"
VAL="${4:-}"

if [ "${APP_NAME}" != "" ]; then
    if [ "${ACTION}" != "" ]; then
        case "${ACTION}" in
        "get")
            if [ "${KEY}" == "" ]; then
                log_fatal "Missing key for action"
            fi
            # Get field from app catalog entry
            jq -re \
               --arg app_name "${APP_NAME}" \
               --arg app_key "${KEY}" \
               '. // [] | .[] | select(.name == $app_name) | .[$app_key]' \
               "${HUD_APPS_CATALOG}" 
            ;;
        "set") 
            if [ "${KEY}" == "" ]; then
                log_fatal "Missing key for action"
            fi
            if [ "${VAL}" == "" ]; then
                log_fatal "Missing value for set action"
            fi

            # Set field on app catalog entry
            catalog_tmp="$(mktemp)"
            jq -e --arg app_name "${APP_NAME}" \
                  --arg app_key "${KEY}" \
                  --arg app_val "${VAL}" \
                  'map(if (.name == $app_name) then (.[$app_key] = $app_val) else (.) end)' \
                  "${HUD_APPS_CATALOG}" > "${catalog_tmp}"
            cat "${catalog_tmp}" > "${HUD_APPS_CATALOG}" # cat > to preserve file permissions
            ;;
        "new")
            if [ "${KEY}" == "" ]; then
                log_fatal "Missing key for action"
            fi

            # Create a new catalog entry
            # key should the manifest path
            catalog_tmp="$(mktemp)"
            jq -e --arg app_name "${APP_NAME}" \
                  --arg app_manifest "${KEY}" \
                  '. // [] | . += [{ "name": $app_name, "manifest": $app_manifest, "enabled": false }]' \
                  "${HUD_APPS_CATALOG}" > "${catalog_tmp}"
            cat "${catalog_tmp}" > "${HUD_APPS_CATALOG}" # cat > to preserve file permissions
            ;;
        # "installed")
        #     # If app is installed, exit 0. Otherwise, exit 1
        #     jq -e --arg app_name "${APP_NAME}" \
        #        '. // [] | .[] | select()' \
        #        "${HUD_APPS_CATALOG}" 
        #     ;; 
        *)
            log_fatal "Unknown action ${ACTION}"
            ;;
        esac

        exit 0
    fi

    # Return catalog for a specific app
    jq -e --arg app_name "${APP_NAME}" \
       '. // [] | .[] | select(.name == $app_name)' \
       "${HUD_APPS_CATALOG}"
else
    # Return entire catalog
    jq '. // [] | .[]' \
       "${HUD_APPS_CATALOG}"
fi